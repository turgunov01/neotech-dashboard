import { defineComponent as o, defineAsyncComponent as r, resolveComponent as n, openBlock as a, createBlock as c, withCtx as i, renderSlot as p } from "vue";
import { g as s, a as l } from "./get-block-properties-nrMer_9r.js";
import { f as m } from "./index-1_sMRASk.js";
const d = () => import("./index-1_sMRASk.js").then((e) => e.G).then((e) => e.default).catch((e) => {
  throw console.error(
    "Error while attempting to dynamically import component DynamicRenderer at ../../dynamic-renderer/dynamic-renderer.vue",
    e
  ), e;
}), f = o({
  name: "block-wrapper",
  components: { DynamicRenderer: r(d) },
  props: ["Wrapper", "block", "context"],
  data() {
    return { getBlockActions: s, getBlockProperties: l };
  }
});
function u(e, k, b, y, S, g) {
  const t = n("DynamicRenderer");
  return a(), c(t, {
    TagName: e.Wrapper,
    attributes: e.getBlockProperties({
      block: e.block,
      context: e.context
    }),
    actionAttributes: e.getBlockActions({
      block: e.block,
      rootState: e.context.rootState,
      rootSetState: e.context.rootSetState,
      localState: e.context.localState,
      context: e.context.context,
      stripPrefix: !0
    })
  }, {
    default: i(() => [
      p(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["TagName", "attributes", "actionAttributes"]);
}
const D = /* @__PURE__ */ m(f, [["render", u]]);
export {
  D as default
};
