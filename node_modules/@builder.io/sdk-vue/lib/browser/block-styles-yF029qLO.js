import "./style.css";
import { defineComponent as g, resolveComponent as B, openBlock as v, createBlock as C, createCommentVNode as _ } from "vue";
import { _ as $, T, g as p, c as y, a as w, b as l, d as k, e as E, f as I } from "./index-yersTeTV.js";
const N = g({
  name: "block-styles",
  components: { InlinedStyles: $ },
  props: ["block", "context"],
  data() {
    return { TARGET: T };
  },
  computed: {
    canShowBlock() {
      const t = p({
        block: this.block,
        localState: this.context.localState,
        rootState: this.context.rootState,
        rootSetState: this.context.rootSetState,
        context: this.context.context,
        shouldEvaluateBindings: !0
      });
      return y(t.hide) ? !t.hide : y(t.show) ? t.show : !0;
    },
    css() {
      var S, u, h;
      const t = p({
        block: this.block,
        localState: this.context.localState,
        rootState: this.context.rootState,
        rootSetState: this.context.rootSetState,
        context: this.context.context,
        shouldEvaluateBindings: !0
      }), e = t.responsiveStyles, n = this.context.content, c = w(
        ((S = n == null ? void 0 : n.meta) == null ? void 0 : S.breakpoints) || {}
      ), r = e == null ? void 0 : e.large, i = e == null ? void 0 : e.medium, a = e == null ? void 0 : e.small, o = t.id;
      if (!o)
        return "";
      const f = r ? l({
        className: o,
        styles: r
      }) : "", x = i ? l({
        className: o,
        styles: i,
        mediaQuery: k(
          "medium",
          c
        )
      }) : "", b = a ? l({
        className: o,
        styles: a,
        mediaQuery: k(
          "small",
          c
        )
      }) : "", s = t.animations && t.animations.find((d) => d.trigger === "hover");
      let m = "";
      if (s) {
        const d = ((h = (u = s.steps) == null ? void 0 : u[1]) == null ? void 0 : h.styles) || {};
        m = l({
          className: `${o}:hover`,
          styles: {
            ...d,
            transition: `all ${s.duration}s ${E(
              s.easing
            )}`,
            transitionDelay: s.delay ? `${s.delay}s` : "0s"
          }
        }) || "";
      }
      return [
        f,
        x,
        b,
        m
      ].join(" ");
    }
  }
});
function z(t, e, n, c, r, i) {
  const a = B("InlinedStyles");
  return t.TARGET !== "reactNative" && t.css && t.canShowBlock ? (v(), C(a, {
    key: 0,
    id: "builderio-block",
    styles: t.css
  }, null, 8, ["styles"])) : _("", !0);
}
const F = /* @__PURE__ */ I(N, [["render", z]]);
export {
  F as default
};
