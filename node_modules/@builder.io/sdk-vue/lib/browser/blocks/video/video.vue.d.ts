declare const _default: import("vue").DefineComponent<Readonly<{
    video?: any;
    aspectRatio?: any;
    position?: any;
    attributes?: any;
    builderBlock?: any;
    fitContent?: any;
    lazyLoad?: any;
    posterImage?: any;
    autoPlay?: any;
    controls?: any;
    muted?: any;
    loop?: any;
    playsInline?: any;
    fit?: any;
    preload?: any;
}>, unknown, unknown, {
    videoProps(): {
        playsInline?: boolean | undefined;
        loop?: boolean | undefined;
        controls?: boolean | undefined;
        muted?: boolean | undefined;
        autoPlay?: boolean | undefined;
    };
    spreadProps(): {
        playsInline?: boolean | undefined;
        loop?: boolean | undefined;
        controls?: boolean | undefined;
        muted?: boolean | undefined;
        autoPlay?: boolean | undefined;
    };
}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<Readonly<{
    video?: any;
    aspectRatio?: any;
    position?: any;
    attributes?: any;
    builderBlock?: any;
    fitContent?: any;
    lazyLoad?: any;
    posterImage?: any;
    autoPlay?: any;
    controls?: any;
    muted?: any;
    loop?: any;
    playsInline?: any;
    fit?: any;
    preload?: any;
}>>>, {
    readonly video?: any;
    readonly aspectRatio?: any;
    readonly position?: any;
    readonly attributes?: any;
    readonly builderBlock?: any;
    readonly fitContent?: any;
    readonly lazyLoad?: any;
    readonly posterImage?: any;
    readonly autoPlay?: any;
    readonly controls?: any;
    readonly muted?: any;
    readonly loop?: any;
    readonly playsInline?: any;
    readonly fit?: any;
    readonly preload?: any;
}, {}>;
export default _default;
