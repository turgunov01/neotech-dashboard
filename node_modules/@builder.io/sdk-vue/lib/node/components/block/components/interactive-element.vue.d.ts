import type { BuilderContextInterface } from "../../../context/types";
import type { BuilderBlock } from "../../../types/builder-block";
import type { Dictionary } from "../../../types/typescript";
export type InteractiveElementProps = {
    Wrapper: any;
    block: BuilderBlock;
    context: BuilderContextInterface;
    wrapperProps: Dictionary<any>;
    includeBlockProps: boolean;
    children?: any;
};
declare const _default: import("vue").DefineComponent<Readonly<{
    context?: any;
    block?: any;
    includeBlockProps?: any;
    wrapperProps?: any;
    Wrapper?: any;
}>, unknown, unknown, {
    attributes(): {};
}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<Readonly<{
    context?: any;
    block?: any;
    includeBlockProps?: any;
    wrapperProps?: any;
    Wrapper?: any;
}>>>, {
    readonly context?: any;
    readonly block?: any;
    readonly includeBlockProps?: any;
    readonly wrapperProps?: any;
    readonly Wrapper?: any;
}, {}>;
export default _default;
