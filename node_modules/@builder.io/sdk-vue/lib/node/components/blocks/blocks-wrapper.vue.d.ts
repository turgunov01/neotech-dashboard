import type { BuilderBlock } from "../../types/builder-block";
export type BlocksWrapperProps = {
    blocks: BuilderBlock[] | undefined;
    parent: string | undefined;
    path: string | undefined;
    styleProp: Record<string, any> | undefined;
    /**
     * The element that wraps each list of blocks. Defaults to a `div` element ('ScrollView' in React Native).
     */
    BlocksWrapper: any;
    /**
     * Additonal props to pass to `blocksWrapper`. Defaults to `{}`.
     */
    BlocksWrapperProps: any;
    children?: any;
};
declare const _default: import("vue").DefineComponent<Readonly<{
    path?: any;
    blocks?: any;
    parent?: any;
    styleProp?: any;
    BlocksWrapperProps?: any;
    BlocksWrapper?: any;
}>, unknown, unknown, {
    className(): string;
}, {
    onClick(): void;
    onMouseEnter(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<Readonly<{
    path?: any;
    blocks?: any;
    parent?: any;
    styleProp?: any;
    BlocksWrapperProps?: any;
    BlocksWrapper?: any;
}>>>, {
    readonly path?: any;
    readonly blocks?: any;
    readonly parent?: any;
    readonly styleProp?: any;
    readonly BlocksWrapperProps?: any;
    readonly BlocksWrapper?: any;
}, {}>;
export default _default;
