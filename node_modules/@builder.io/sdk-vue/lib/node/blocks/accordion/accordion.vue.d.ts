import type { Dictionary } from "../../types/typescript";
declare const _default: import("vue").DefineComponent<Readonly<{
    builderContext?: any;
    grid?: any;
    builderComponents?: any;
    builderBlock?: any;
    builderLinkComponent?: any;
    items?: any;
    oneAtATime?: any;
    gridRowWidth?: any;
}>, unknown, {
    open: never[];
    convertOrderNumberToString: (order: number) => string;
}, {
    onlyOneAtATime(): boolean;
    accordionStyles(): any;
    accordionTitleStyles(): Dictionary<string>;
    openGridItemOrder(): number | null;
    accordionDetailStyles(): Dictionary<string>;
}, {
    getAccordionTitleClassName(index: number): string;
    getAccordionDetailClassName(index: number): string;
    onClick(index: number): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<Readonly<{
    builderContext?: any;
    grid?: any;
    builderComponents?: any;
    builderBlock?: any;
    builderLinkComponent?: any;
    items?: any;
    oneAtATime?: any;
    gridRowWidth?: any;
}>>>, {
    readonly builderContext?: any;
    readonly grid?: any;
    readonly builderComponents?: any;
    readonly builderBlock?: any;
    readonly builderLinkComponent?: any;
    readonly items?: any;
    readonly oneAtATime?: any;
    readonly gridRowWidth?: any;
}, {}>;
export default _default;
