import type { BuilderBlock } from "../../../types/builder-block";
import type { BuilderComponentsProp, BuilderDataProps, BuilderLinkComponentProp } from "../../../types/builder-props";
import type { Dictionary } from "../../../types/typescript";
import { filterAttrs } from "../../helpers";
/**
 * This import is used by the Svelte SDK. Do not remove.
 */
export type FormProps = BuilderDataProps & BuilderComponentsProp & BuilderLinkComponentProp & {
    attributes?: any;
    name?: string;
    action?: string;
    validate?: boolean;
    method?: string;
    sendSubmissionsTo?: string;
    sendSubmissionsToEmail?: string;
    sendWithJs?: boolean;
    contentType?: string;
    customHeaders?: {
        [key: string]: string;
    };
    successUrl?: string;
    previewState?: FormState;
    successMessage?: BuilderBlock[];
    errorMessage?: BuilderBlock[];
    sendingMessage?: BuilderBlock[];
    resetFormOnSubmit?: boolean;
    errorMessagePath?: string;
};
/**
 * This import is used by the Svelte SDK. Do not remove.
 */
export type FormState = "unsubmitted" | "sending" | "success" | "error";
declare const _default: import("vue").DefineComponent<Readonly<{
    name?: any;
    builderContext?: any;
    attributes?: any;
    builderComponents?: any;
    builderBlock?: any;
    method?: any;
    builderLinkComponent?: any;
    previewState?: any;
    sendWithJs?: any;
    sendSubmissionsTo?: any;
    action?: any;
    customHeaders?: any;
    contentType?: any;
    sendSubmissionsToEmail?: any;
    errorMessagePath?: any;
    resetFormOnSubmit?: any;
    successUrl?: any;
    validate?: any;
    errorMessage?: any;
    sendingMessage?: any;
    successMessage?: any;
}>, unknown, {
    formState: string;
    responseData: null;
    formErrorMessage: string;
    filterAttrs: typeof filterAttrs;
}, {}, {
    mergeNewRootState(newData: Dictionary<any>): void;
    submissionState(): any;
    onSubmit(event: any): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<Readonly<{
    name?: any;
    builderContext?: any;
    attributes?: any;
    builderComponents?: any;
    builderBlock?: any;
    method?: any;
    builderLinkComponent?: any;
    previewState?: any;
    sendWithJs?: any;
    sendSubmissionsTo?: any;
    action?: any;
    customHeaders?: any;
    contentType?: any;
    sendSubmissionsToEmail?: any;
    errorMessagePath?: any;
    resetFormOnSubmit?: any;
    successUrl?: any;
    validate?: any;
    errorMessage?: any;
    sendingMessage?: any;
    successMessage?: any;
}>>>, {
    readonly name?: any;
    readonly builderContext?: any;
    readonly attributes?: any;
    readonly builderComponents?: any;
    readonly builderBlock?: any;
    readonly method?: any;
    readonly builderLinkComponent?: any;
    readonly previewState?: any;
    readonly sendWithJs?: any;
    readonly sendSubmissionsTo?: any;
    readonly action?: any;
    readonly customHeaders?: any;
    readonly contentType?: any;
    readonly sendSubmissionsToEmail?: any;
    readonly errorMessagePath?: any;
    readonly resetFormOnSubmit?: any;
    readonly successUrl?: any;
    readonly validate?: any;
    readonly errorMessage?: any;
    readonly sendingMessage?: any;
    readonly successMessage?: any;
}, {}>;
export default _default;
